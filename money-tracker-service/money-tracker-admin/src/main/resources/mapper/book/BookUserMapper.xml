<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcwl.admin.book.mapper.BookUserMapper">
    <resultMap type="BookUser" id="BookUserResult">
        <result property="id" column="id"/>
        <result property="bookId" column="book_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="avatar" column="avatar"/>
        <result property="defaultBook" column="default_book"/>
        <result property="auditStatus" column="audit_status"/>
        <result property="status" column="status"/>
        <result property="auth" column="auth"/>
        <result property="attr1" column="attr1"/>
        <result property="attr2" column="attr2"/>
        <result property="attr3" column="attr3"/>
        <result property="attr4" column="attr4"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createId" column="create_id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateId" column="update_id"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectBookUserVo">
        select id,
               book_id,
               user_id,
               user_name,
               nick_name,
               avatar,
               default_book,
               audit_status,
               status,
               auth,
               attr1,
               attr2,
               attr3,
               attr4,
               del_flag,
               create_id,
               create_by,
               create_time,
               update_id,
               update_by,
               update_time,
               remark
        from book_user
    </sql>

    <select id="selectList" parameterType="com.jcwl.admin.book.dto.BookUserQueryDTO" resultMap="BookUserResult">
        <include refid="selectBookUserVo"/>
        <where>
            and del_flag = '0'
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userName != null  and userName != ''">
                and user_name like concat('%', #{userName}, '%')
            </if>
            <if test="nickName != null  and nickName != ''">
                and nick_name like concat('%', #{nickName}, '%')
            </if>
            <if test="avatar != null  and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="defaultBook != null">
                and default_book = #{defaultBook}
            </if>
            <if test="auditStatus != null  and auditStatus != ''">
                and audit_status = #{auditStatus}
            </if>
            <if test="status != null  and status != ''">
                and status = #{status}
            </if>
            <if test="auth != null">
                and auth = #{auth}
            </if>
            <if test="attr1 != null  and attr1 != ''">
                and attr1 = #{attr1}
            </if>
            <if test="attr2 != null  and attr2 != ''">
                and attr2 = #{attr2}
            </if>
            <if test="attr3 != null">
                and attr3 = #{attr3}
            </if>
            <if test="attr4 != null">
                and attr4 = #{attr4}
            </if>
            <if test="createId != null">
                and create_id = #{createId}
            </if>
            <if test="updateId != null">
                and update_id = #{updateId}
            </if>
        </where>
        order by CASE WHEN user_id = #{orderByUserId} THEN 0 ELSE 1 END, create_time desc
    </select>

    <select id="selectById" parameterType="Long" resultMap="BookUserResult">
        <include refid="selectBookUserVo"/>
        where id = #{id} and del_flag = '0'
    </select>

    <insert id="insert" parameterType="BookUser" useGeneratedKeys="true" keyProperty="id">
        insert into book_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                book_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickName != null">
                nick_name,
            </if>
            <if test="avatar != null">
                avatar,
            </if>
            <if test="defaultBook != null">
                default_book,
            </if>
            <if test="auditStatus != null">
                audit_status,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="auth != null">
                auth,
            </if>
            <if test="attr1 != null">
                attr1,
            </if>
            <if test="attr2 != null">
                attr2,
            </if>
            <if test="attr3 != null">
                attr3,
            </if>
            <if test="attr4 != null">
                attr4,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateId != null">
                update_id,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="remark != null">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                #{bookId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="userName != null">
                #{userName},
            </if>
            <if test="nickName != null">
                #{nickName},
            </if>
            <if test="avatar != null">
                #{avatar},
            </if>
            <if test="defaultBook != null">
                #{defaultBook},
            </if>
            <if test="auditStatus != null">
                #{auditStatus},
            </if>
            <if test="status != null">
                #{status},
            </if>
            <if test="auth != null">
                #{auth},
            </if>
            <if test="attr1 != null">
                #{attr1},
            </if>
            <if test="attr2 != null">
                #{attr2},
            </if>
            <if test="attr3 != null">
                #{attr3},
            </if>
            <if test="attr4 != null">
                #{attr4},
            </if>
            <if test="delFlag != null">
                #{delFlag},
            </if>
            <if test="createId != null">
                #{createId},
            </if>
            <if test="createBy != null">
                #{createBy},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateId != null">
                #{updateId},
            </if>
            <if test="updateBy != null">
                #{updateBy},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
            <if test="remark != null">
                #{remark},
            </if>
        </trim>
    </insert>

    <insert id="insertBatch">
        insert into book_user
        (
        book_id,
        user_id,
        user_name,
        nick_name,
        avatar,
        default_book,
        audit_status,
        status,
        auth,
        attr1,
        attr2,
        attr3,
        attr4,
        del_flag,
        create_id,
        create_by,
        create_time,
        update_id,
        update_by,
        update_time,
        remark
        )
        values
        <foreach item="item" collection="list" separator=",">
            (
            #{item.bookId},
            #{item.userId},
            #{item.userName},
            #{item.nickName},
            #{item.avatar},
            #{item.defaultBook},
            #{item.auditStatus},
            #{item.status},
            #{item.auth},
            #{item.attr1},
            #{item.attr2},
            #{item.attr3},
            #{item.attr4},
            #{item.delFlag},
            #{item.createId},
            #{item.createBy},
            #{item.createTime},
            #{item.updateId},
            #{item.updateBy},
            #{item.updateTime},
            #{item.remark}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="BookUser">
        update book_user
        <trim prefix="SET" suffixOverrides=",">
            <if test="bookId != null">
                book_id = #{bookId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName},
            </if>
            <if test="avatar != null">
                avatar = #{avatar},
            </if>
            <if test="defaultBook != null">
                default_book = #{defaultBook},
            </if>
            <if test="auditStatus != null">
                audit_status = #{auditStatus},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="auth != null">
                auth = #{auth},
            </if>
            <if test="attr1 != null">
                attr1 = #{attr1},
            </if>
            <if test="attr2 != null">
                attr2 = #{attr2},
            </if>
            <if test="attr3 != null">
                attr3 = #{attr3},
            </if>
            <if test="attr4 != null">
                attr4 = #{attr4},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag},
            </if>
            <if test="createId != null">
                create_id = #{createId},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateId != null">
                update_id = #{updateId},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </trim>
        where id = #{id}
    </update>

    <update id="updateBatch">
        UPDATE book_user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="book_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.bookId}
                </foreach>
            </trim>
            <trim prefix="user_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.userId}
                </foreach>
            </trim>
            <trim prefix="user_name = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.userName}
                </foreach>
            </trim>
            <trim prefix="nick_name = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.nickName}
                </foreach>
            </trim>
            <trim prefix="avatar = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.avatar}
                </foreach>
            </trim>
            <trim prefix="default_book = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.defaultBook}
                </foreach>
            </trim>
            <trim prefix="audit_status = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.auditStatus}
                </foreach>
            </trim>
            <trim prefix="status = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.status}
                </foreach>
            </trim>
            <trim prefix="auth = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.auth}
                </foreach>
            </trim>
            <trim prefix="attr1 = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.attr1}
                </foreach>
            </trim>
            <trim prefix="attr2 = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.attr2}
                </foreach>
            </trim>
            <trim prefix="attr3 = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.attr3}
                </foreach>
            </trim>
            <trim prefix="attr4 = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.attr4}
                </foreach>
            </trim>
            <trim prefix="del_flag = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.delFlag}
                </foreach>
            </trim>
            <trim prefix="create_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.createId}
                </foreach>
            </trim>
            <trim prefix="create_by = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.createBy}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.createTime}
                </foreach>
            </trim>
            <trim prefix="update_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.updateId}
                </foreach>
            </trim>
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.updateBy}
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.updateTime}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when id=#{item.id} then #{item.remark}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <delete id="deleteById" parameterType="Long">
        update book_user set del_flag = '2' where id = #{id}
    </delete>

    <delete id="deleteByBookId">
        update book_user set del_flag = '2' where book_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByIds" parameterType="String">
        update book_user set del_flag = '2' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="checkInviteUser" resultType="com.jcwl.admin.book.domain.BookUser">
        <include refid="selectBookUserVo"/>
        <where>
            and del_flag = '0'
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="userName != null  and userName != ''">
                and user_name like concat('%', #{userName}, '%')
            </if>
        </where>
        limit 1
    </select>

    <select id="selectByUserId" resultType="com.jcwl.admin.book.domain.BookUser">
        <include refid="selectBookUserVo"/>
        <where>
            and del_flag = '0'
            <if test="bookId != null">
                and book_id = #{bookId}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
        limit 1
    </select>
</mapper>
